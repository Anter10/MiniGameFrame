{"version":3,"sources":["PhyFrameWorld.js"],"names":["self","cc","Class","extends","Component","properties","size","mouseJoint","nodeP","type","Node","default","drawPhyNode","onLoad","lineWidth","strokeColor","color","isClearMode","prepoint","getComponent","RigidBody","gravityScale","Graphics","console","log","lineTo","fillColor","fromHEX","chain","PhysicsChainCollider","JSON","stringify","points","moveTo","close","stroke","fill","eventManager","addListener","event","EventListener","TOUCH_ONE_BY_ONE","onTouchBegan","onTouchMoved","onTouchEnded","node","physicsManager","director","getPhysicsManager","enabled","debugDrawFlags","PhysicsManager","DrawBits","e_jointBit","e_shapeBit","gravity","v2","hysic","manager","getCollisionManager","width","height","body","addComponent","RigidBodyType","Static","joint","MouseJoint","mouseRegion","_addBound","parent","x","y","collider","PhysicsBoxCollider","offset","onCollisionEnter","other","world","aabb","preAabb","t","transform","r","radius","p","position","ps","touch","touchLoc","getLocation","allloads","clear","tx","ty","length","apply","cleardraw"],"mappings":";;;;;;AAAA,IAAIA,OAAO,IAAX;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,cAAML,GAAGK,IAAH,CAAQ,CAAR,EAAW,CAAX,CADE;AAERC,oBAAY,IAFJ;AAGRC,eAAO;AACHC,kBAAMR,GAAGS,IADN;AAEHC,qBAAS;AAFN,SAHC;AAORC,qBAAY;AACPH,kBAAMR,GAAGS,IADF;AAEHC,qBAAS;AAFN;AAPJ,KAHP;;AAgBL;AACAE,YAAQ,kBAAY;AAChB;AACAb,eAAO,IAAP;AACA,aAAKc,SAAL,GAAiB,CAAjB;AACA,aAAKC,WAAL,GAAmBd,GAAGe,KAAH,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAnB;AACA,aAAKC,WAAL,GAAmB,KAAnB;AACA,aAAKC,QAAL,GAAgB,IAAhB;AACAlB,aAAKY,WAAL,CAAiBO,YAAjB,CAA8BlB,GAAGmB,SAAjC,EAA4CC,YAA5C,GAA2D,CAA3D;AACA,aAAKC,QAAL,GAAgB,KAAKV,WAAL,CAAiBO,YAAjB,CAA8BlB,GAAGqB,QAAjC,CAAhB;AACAC,gBAAQC,GAAR,CAAY,iBAAiB,KAAKF,QAAL,CAAcG,MAA3C;AACA,aAAKH,QAAL,CAAcR,SAAd,GAA0B,EAA1B;AACA,aAAKQ,QAAL,CAAcI,SAAd,CAAwBC,OAAxB,CAAgC,SAAhC;AACA,aAAKC,KAAL,GAAa,KAAKhB,WAAL,CAAiBO,YAAjB,CAA8BlB,GAAG4B,oBAAjC,CAAb;AACAN,gBAAQC,GAAR,CAAY,cAAcM,KAAKC,SAAL,CAAe,KAAKH,KAAL,CAAWI,MAA1B,CAA1B;AACA,aAAKV,QAAL,CAAcR,SAAd,GAA0B,EAA1B;AACA,aAAKQ,QAAL,CAAcI,SAAd,CAAwBC,OAAxB,CAAgC,SAAhC;;AAEA,aAAKL,QAAL,CAAcW,MAAd,CAAqB,CAAC,GAAtB,EAA2B,CAA3B;AACA,aAAKX,QAAL,CAAcG,MAAd,CAAqB,CAArB,EAAwB,CAAC,GAAzB;AACA,aAAKH,QAAL,CAAcG,MAAd,CAAqB,EAArB,EAAyB,CAAzB;AACA,aAAKH,QAAL,CAAcG,MAAd,CAAqB,CAArB,EAAwB,GAAxB;AACA,aAAKH,QAAL,CAAcY,KAAd;;AAEA,aAAKZ,QAAL,CAAca,MAAd;AACA,aAAKb,QAAL,CAAcc,IAAd;;AAEA;AACAnC,WAAGoC,YAAH,CAAgBC,WAAhB,CAA4B;AACxBC,mBAAOtC,GAAGuC,aAAH,CAAiBC,gBADA;AAExBC,0BAAc,KAAKA,YAFK;AAGxBC,0BAAc,KAAKA,YAHK;AAIxBC,0BAAc,KAAKA;AAJK,SAA5B,EAKG,KAAKC,IALR;;AAOA,YAAIC,iBAAiB7C,GAAG8C,QAAH,CAAYC,iBAAZ,EAArB;AACAF,uBAAeG,OAAf,GAAyB,IAAzB;;AAEAH,uBAAeI,cAAf,GAAgCjD,GAAGkD,cAAH,CAAkBC,QAAlB,CAA2BC,UAA3B,GAAwCpD,GAAGkD,cAAH,CAAkBC,QAAlB,CAA2BE,UAAnG;AACAR,uBAAeS,OAAf,GAAyBtD,GAAGuD,EAAH,CAAM,CAAN,EAAS,CAAT,CAAzB;AACA,aAAKC,KAAL,GAAaX,cAAb;;AAEA,YAAIY,UAAUzD,GAAG8C,QAAH,CAAYY,mBAAZ,EAAd;AACA;AACA;AACA;AACA,YAAIC,QAAQ,KAAKtD,IAAL,CAAUsD,KAAV,IAAmB,KAAKf,IAAL,CAAUe,KAAzC;AACA,YAAIC,SAAS,KAAKvD,IAAL,CAAUuD,MAAV,IAAoB,KAAKhB,IAAL,CAAUgB,MAA3C;;AAEA,YAAIhB,OAAO,IAAI5C,GAAGS,IAAP,EAAX;;AAGA;AACA;AACA,YAAIoD,OAAOjB,KAAKkB,YAAL,CAAkB9D,GAAGmB,SAArB,CAAX;AACA0C,aAAKrD,IAAL,GAAYR,GAAG+D,aAAH,CAAiBC,MAA7B;AACA,aAAKrC,KAAL,CAAWI,MAAX,GAAoB,EAApB;AACA,YAAI,KAAKzB,UAAT,EAAqB;AACjB;AACA,gBAAI2D,QAAQrB,KAAKkB,YAAL,CAAkB9D,GAAGkE,UAArB,CAAZ;AACAD,kBAAME,WAAN,GAAoB,KAAKvB,IAAzB;AACH;;AAED,aAAKwB,SAAL,CAAexB,IAAf,EAAqB,CAArB,EAAwBgB,SAAS,CAAjC,EAAoCD,KAApC,EAA2C,EAA3C;AACA,aAAKS,SAAL,CAAexB,IAAf,EAAqB,CAArB,EAAwB,CAACgB,MAAD,GAAU,CAAlC,EAAqCD,KAArC,EAA4C,EAA5C;AACA,aAAKS,SAAL,CAAexB,IAAf,EAAqB,CAACe,KAAD,GAAS,CAA9B,EAAiC,CAAjC,EAAoC,EAApC,EAAwCC,MAAxC;AACA,aAAKQ,SAAL,CAAexB,IAAf,EAAqBe,QAAQ,CAA7B,EAAgC,CAAhC,EAAmC,EAAnC,EAAuCC,MAAvC;;AAEAhB,aAAKyB,MAAL,GAAc,KAAKzB,IAAnB;;AAEAtB,gBAAQC,GAAR,CAAY,QAAZ;AACH,KAvFI;;AAyFL6C,eAAW,mBAAUxB,IAAV,EAAgB0B,CAAhB,EAAmBC,CAAnB,EAAsBZ,KAAtB,EAA6BC,MAA7B,EAAqC;AAC5C,YAAIY,WAAW5B,KAAKkB,YAAL,CAAkB9D,GAAGyE,kBAArB,CAAf;AACAD,iBAASE,MAAT,CAAgBJ,CAAhB,GAAoBA,CAApB;AACAE,iBAASE,MAAT,CAAgBH,CAAhB,GAAoBA,CAApB;AACAC,iBAASnE,IAAT,CAAcsD,KAAd,GAAsBA,KAAtB;AACAa,iBAASnE,IAAT,CAAcuD,MAAd,GAAuBA,MAAvB;AACH,KA/FI;;AAkGL;;;;;AAKAe,sBAAkB,0BAAUC,KAAV,EAAiB7E,IAAjB,EAAuB;AACrCuB,gBAAQC,GAAR,CAAY,oBAAZ;;AAEA;AACA,YAAIsD,QAAQ9E,KAAK8E,KAAjB;;AAEA;AACA,YAAIC,OAAOD,MAAMC,IAAjB;;AAEA;AACA,YAAIC,UAAUF,MAAME,OAApB;;AAEA;AACA,YAAIC,IAAIH,MAAMI,SAAd;;AAEA;AACA,YAAIC,IAAIL,MAAMM,MAAd;AACA,YAAIC,IAAIP,MAAMQ,QAAd;;AAEA;AACA,YAAIC,KAAKT,MAAM9C,MAAf;AACH,KA5HI;;AA8HLU,kBAAc,sBAAU8C,KAAV,EAAiBjD,KAAjB,EAAwB;;AAGlC;AACA,YAAIkD,WAAWD,MAAME,WAAN,EAAf;AACC1F,aAAKyD,KAAL,CAAWF,OAAX,GAAqBtD,GAAGuD,EAAH,CAAM,CAAN,EAAS,CAAT,CAArB;AACDxD,aAAK4B,KAAL,CAAWI,MAAX,GAAoB,EAApB;AACAhC,aAAK2F,QAAL,GAAgB,EAAhB;AACA3F,aAAKsB,QAAL,CAAcsE,KAAd;AACA5F,aAAKsB,QAAL,CAAcR,SAAd,GAA0B,EAA1B;AACAd,aAAKsB,QAAL,CAAcI,SAAd,CAAwBC,OAAxB,CAAgC,SAAhC;AACA,YAAIkE,KAAMJ,SAASlB,CAAT,GAAa,GAAvB;AACA,YAAIuB,KAAML,SAASjB,CAAT,GAAa,GAAvB;AACAxE,aAAKsB,QAAL,CAAcW,MAAd,CAAqB4D,EAArB,EAAyBC,EAAzB;AACC9F,aAAKY,WAAL,CAAiB0E,QAAjB,GAA4BrF,GAAGoF,CAAH,CAAKQ,EAAL,EAASC,EAAT,CAA5B;AACD9F,aAAK2F,QAAL,CAAc3F,KAAK2F,QAAL,CAAcI,MAA5B,IAAsC9F,GAAGoF,CAAH,CAAKQ,EAAL,EAAQC,EAAR,CAAtC;;AAEA9F,aAAKY,WAAL,CAAiBO,YAAjB,CAA8BlB,GAAGmB,SAAjC,EAA4CC,YAA5C,GAA2D,CAA3D;AACA,eAAO,IAAP;AACH,KAjJI;AAkJLsB,kBAAc,sBAAU6C,KAAV,EAAiBjD,KAAjB,EAAwB;AAC1CvC,aAAKyD,KAAL,CAAWF,OAAX,GAAqBtD,GAAGuD,EAAH,CAAM,CAAN,EAAS,CAAT,CAArB;AACQ;AACA,YAAIiC,WAAWD,MAAME,WAAN,EAAf;AACE,YAAIG,KAAMJ,SAASlB,CAAT,GAAa,GAAvB;AACA,YAAIuB,KAAML,SAASjB,CAAT,GAAa,GAAvB;AACFxE,aAAK2F,QAAL,CAAc3F,KAAK2F,QAAL,CAAcI,MAA5B,IAAsC9F,GAAGoF,CAAH,CAAKQ,EAAL,EAASC,EAAT,CAAtC;AACA9F,aAAKsB,QAAL,CAAcG,MAAd,CAAqBoE,EAArB,EAAyBC,EAAzB;AACA9F,aAAKsB,QAAL,CAAca,MAAd;AACH,KA3JI;;AA6JLS,kBAAc,sBAAU4C,KAAV,EAAiBjD,KAAjB,EAAwB;AAClChB,gBAAQC,GAAR,CAAY,YAAYM,KAAKC,SAAL,CAAe/B,KAAK2F,QAApB,CAAxB;AACA3F,aAAKsB,QAAL,CAAcY,KAAd;AACAlC,aAAK4B,KAAL,CAAWI,MAAX,GAAoBhC,KAAK2F,QAAzB;AACA3F,aAAK4B,KAAL,CAAWoE,KAAX;AACAhG,aAAKyD,KAAL,CAAWF,OAAX,GAAqBtD,GAAGuD,EAAH,CAAM,CAAN,EAAS,CAAC,GAAV,CAArB;AACAxD,aAAKY,WAAL,CAAiBO,YAAjB,CAA8BlB,GAAGmB,SAAjC,EAA4CC,YAA5C,GAA2D,CAA3D;AACH,KApKI;;AAsKL4E,eAAU,qBAAU;AACfjG,aAAKsB,QAAL,CAAcsE,KAAd;AACJ;AAxKI,CAAT","file":"PhyFrameWorld.js","sourceRoot":"../../../../assets/PhyFrame","sourcesContent":["var self = null;\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        size: cc.size(0, 0),\n        mouseJoint: true,\n        nodeP: {\n            type: cc.Node,\n            default: null,\n        },\n        drawPhyNode:{\n             type: cc.Node,\n                 default: null,\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        // 初始化参数\n        self = this;\n        this.lineWidth = 5;\n        this.strokeColor = cc.color(0, 0, 0);\n        this.isClearMode = false;\n        this.prepoint = null;\n        self.drawPhyNode.getComponent(cc.RigidBody).gravityScale = 0;\n        this.Graphics = this.drawPhyNode.getComponent(cc.Graphics);\n        console.log(\"Graphics  = \" + this.Graphics.lineTo)\n        this.Graphics.lineWidth = 10;\n        this.Graphics.fillColor.fromHEX('#ff0000');\n        this.chain = this.drawPhyNode.getComponent(cc.PhysicsChainCollider);\n        console.log(\"当前的所有店 = \" + JSON.stringify(this.chain.points));\n        this.Graphics.lineWidth = 10;\n        this.Graphics.fillColor.fromHEX('#ff0000');\n\n        this.Graphics.moveTo(-120, 0);\n        this.Graphics.lineTo(0, -100);\n        this.Graphics.lineTo(20, 0);\n        this.Graphics.lineTo(0, 100);\n        this.Graphics.close();\n\n        this.Graphics.stroke();\n        this.Graphics.fill();\n\n        // 绑定触摸通知事件通知\n        cc.eventManager.addListener({\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\n            onTouchBegan: this.onTouchBegan,\n            onTouchMoved: this.onTouchMoved,\n            onTouchEnded: this.onTouchEnded,\n        }, this.node);\n\n        let physicsManager = cc.director.getPhysicsManager();\n        physicsManager.enabled = true;\n\n        physicsManager.debugDrawFlags = cc.PhysicsManager.DrawBits.e_jointBit | cc.PhysicsManager.DrawBits.e_shapeBit;\n        physicsManager.gravity = cc.v2(0, 0);\n        this.hysic = physicsManager;\n        \n        var manager = cc.director.getCollisionManager();\n        // manager.enabled = true;\n        // manager.enabledDebugDraw = true;\n        // 当前的宽和高\n        let width = this.size.width || this.node.width;\n        let height = this.size.height || this.node.height;\n\n        let node = new cc.Node();\n         \n\n        //   this.Graphics.fill();\n        // 将此节点设置成静态刚体\n        let body = node.addComponent(cc.RigidBody);\n        body.type = cc.RigidBodyType.Static;\n        this.chain.points = [];\n        if (this.mouseJoint) {\n            // add mouse joint\n            let joint = node.addComponent(cc.MouseJoint);\n            joint.mouseRegion = this.node;\n        }\n\n        this._addBound(node, 0, height / 2, width, 20);\n        this._addBound(node, 0, -height / 2, width, 20);\n        this._addBound(node, -width / 2, 0, 20, height);\n        this._addBound(node, width / 2, 0, 20, height);\n\n        node.parent = this.node;\n\n        console.log(\"当前物理世界\");\n    },\n\n    _addBound: function (node, x, y, width, height) {\n        let collider = node.addComponent(cc.PhysicsBoxCollider);\n        collider.offset.x = x;\n        collider.offset.y = y;\n        collider.size.width = width;\n        collider.size.height = height;\n    },\n\n\n    /**\n     * 当碰撞产生的时候调用\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\n     */\n    onCollisionEnter: function (other, self) {\n        console.log('on collision enter');\n\n        // 碰撞系统会计算出碰撞组件在世界坐标系下的相关的值，并放到 world 这个属性里面\n        var world = self.world;\n\n        // 碰撞组件的 aabb 碰撞框\n        var aabb = world.aabb;\n\n        // 节点碰撞前上一帧 aabb 碰撞框的位置\n        var preAabb = world.preAabb;\n\n        // 碰撞框的世界矩阵\n        var t = world.transform;\n\n        // 以下属性为圆形碰撞组件特有属性\n        var r = world.radius;\n        var p = world.position;\n\n        // 以下属性为 矩形 和 多边形 碰撞组件特有属性\n        var ps = world.points;\n    },\n\n    onTouchBegan: function (touch, event) {\n\n\n        // 获取触摸点数据\n        var touchLoc = touch.getLocation();\n         self.hysic.gravity = cc.v2(0, 0);\n        self.chain.points = [];\n        self.allloads = [];\n        self.Graphics.clear()\n        self.Graphics.lineWidth = 10;\n        self.Graphics.fillColor.fromHEX('#ff0000');\n        var tx = (touchLoc.x - 360);\n        var ty = (touchLoc.y - 640);\n        self.Graphics.moveTo(tx, ty);\n         self.drawPhyNode.position = cc.p(tx, ty);\n        self.allloads[self.allloads.length] = cc.p(tx,ty);\n       \n        self.drawPhyNode.getComponent(cc.RigidBody).gravityScale = 0;\n        return true;\n    },\n    onTouchMoved: function (touch, event) {\nself.hysic.gravity = cc.v2(0, 0);\n        // 获取触摸点数据\n        var touchLoc = touch.getLocation();\n          var tx = (touchLoc.x - 360);\n          var ty = (touchLoc.y - 640);\n        self.allloads[self.allloads.length] = cc.p(tx, ty);\n        self.Graphics.lineTo(tx, ty);\n        self.Graphics.stroke();\n    },\n\n    onTouchEnded: function (touch, event) {\n        console.log(\"jieshu \" + JSON.stringify(self.allloads))\n        self.Graphics.close();\n        self.chain.points = self.allloads;\n        self.chain.apply();\n        self.hysic.gravity = cc.v2(0, -320);\n        self.drawPhyNode.getComponent(cc.RigidBody).gravityScale = 5;\n    },\n   \n    cleardraw:function(){\n         self.Graphics.clear()\n    }\n});"]}